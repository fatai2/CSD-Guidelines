name: Expo Publishing
on:
  push:
    branches:
      - master
jobs:
  setup-pandoc:
    name: Setup pandoc
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - name: install pandoc
        uses: r-lib/actions/setup-pandoc@v1
        with:
          pandoc-version: '2.9.2'
      - run: echo "# Test" | pandoc -t html
      - name: convert docx to html
        run: |
          Get-ChildItem -Path ".\docs" -Filter *.docx | ForEach-Object { pandoc -s --self-contained --template=GitHub.html5 --track-changes=accept --quiet -f docx+styles -t html -o ($_.FullName + '.html') $_.FullName }
          Get-ChildItem -Path ".\docs" -Filter *.html | Rename-Item -NewName { $_.name -replace " ","_" }
          Get-ChildItem -Path ".\docs" -Filter *.html | Rename-Item -Force -NewName { $_.FullName -replace ".docx.","." }
          Get-ChildItem -Path ".\docs\*.html" -Recurse | Move-Item -Force -Destination ".\www"
          function Get-TimeStamp { return "[{0:dd-MMM-yyyy} {0:HH:mm:ss}]" -f (Get-Date) }
          Write-Output "Contents last updated at $(Get-TimeStamp)" | Out-file -FilePath .\lastUpdated.txt
        shell: powershell
      - name: Commit files  # transfer the new html files back into the repository
        run: |
          git config --local user.name ${{ github.actor}}
          git config --local user.email ${{ github.actor}}@users.noreply.github.com
          git add .
          git commit -m "Updating the repository GitHub html pages in the www folder"
      - name: Push changes  # push the output folder to your repo
        uses: ad-m/github-push-action@master  
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true      
      - name: setup-node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: expo publish
        uses: expo/expo-github-action@v5
        with:
          expo-version: 3.x
          expo-username: ${{ secrets.EXPO_CLI_USERNAME }}
          expo-password: ${{ secrets.EXPO_CLI_PASSWORD }}
          expo-cache: true
      - name: actual running
        run: |
          yarn install
          expo publish
