{"ast":null,"code":"var _jsxFileName = \"/Users/fataiakemokwe/CSDGuidelines2/src/bottomTabs.tsx\";\nimport React from 'react';\nimport color from 'color';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport { useTheme, Portal, FAB } from 'react-native-paper';\nimport { useSafeArea } from 'react-native-safe-area-context';\nimport { useIsFocused } from '@react-navigation/native';\nimport overlay from \"./overlay\";\nimport { Feed } from \"./feed\";\nimport { Message } from \"./message\";\nimport { Notifications } from \"./notifications\";\nvar Tab = createMaterialBottomTabNavigator();\nexport var BottomTabs = function BottomTabs(props) {\n  var routeName = props.route.state ? props.route.state.routes[props.route.state.index].name : 'Feed';\n  var theme = useTheme();\n  var safeArea = useSafeArea();\n  var isFocused = useIsFocused();\n  var icon = 'feather';\n\n  switch (routeName) {\n    case 'Messages':\n      icon = 'email-plus-outline';\n      break;\n\n    default:\n      icon = 'feather';\n      break;\n  }\n\n  var tabBarColor = theme.dark ? overlay(6, theme.colors.surface) : theme.colors.surface;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    }\n  }, React.createElement(Tab.Navigator, {\n    initialRouteName: \"Messages\",\n    backBehavior: \"initialRoute\",\n    shifting: true,\n    activeColor: theme.colors.primary,\n    inactiveColor: color(theme.colors.text).alpha(0.6).rgb().string(),\n    sceneAnimationEnabled: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Messages\",\n    component: Message,\n    options: {\n      tabBarIcon: 'home-outline',\n      tabBarLabel: \"Home\",\n      tabBarColor: tabBarColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Feed\",\n    component: Feed,\n    options: {\n      tabBarIcon: 'feature-search-outline',\n      tabBarLabel: \"Search\",\n      tabBarColor: tabBarColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Notifications\",\n    component: Notifications,\n    options: {\n      tabBarIcon: 'information-outline',\n      tabBarLabel: \"Info\",\n      tabBarColor: tabBarColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    }\n  })), React.createElement(Portal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    }\n  }, React.createElement(FAB, {\n    visible: isFocused,\n    icon: icon,\n    style: {\n      position: 'absolute',\n      bottom: safeArea.bottom + 65,\n      right: 16\n    },\n    color: \"white\",\n    theme: {\n      colors: {\n        accent: theme.colors.primary\n      }\n    },\n    onPress: function onPress() {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/fataiakemokwe/CSDGuidelines2/src/bottomTabs.tsx"],"names":["React","color","createMaterialBottomTabNavigator","useTheme","Portal","FAB","useSafeArea","useIsFocused","overlay","Feed","Message","Notifications","Tab","BottomTabs","props","routeName","route","state","routes","index","name","theme","safeArea","isFocused","icon","tabBarColor","dark","colors","surface","primary","text","alpha","rgb","string","tabBarIcon","tabBarLabel","position","bottom","right","accent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport color from 'color';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport { useTheme, Portal, FAB } from 'react-native-paper';\nimport { useSafeArea } from 'react-native-safe-area-context';\nimport { useIsFocused, RouteProp } from '@react-navigation/native';\n\nimport overlay from './overlay';\nimport { Feed } from './feed';\nimport { Message } from './message';\nimport { Notifications } from './notifications';\nimport { StackNavigatorParamlist } from './types';\n\nconst Tab = createMaterialBottomTabNavigator();\n\ntype Props = {\n  route: RouteProp<StackNavigatorParamlist, 'FeedList'>;\n};\n\nexport const BottomTabs = (props: Props) => {\n  const routeName = props.route.state\n    ? props.route.state.routes[props.route.state.index].name\n    : 'Feed';\n\n  const theme = useTheme();\n  const safeArea = useSafeArea();\n  const isFocused = useIsFocused();\n\n  let icon = 'feather';\n\n  switch (routeName) {\n    case 'Messages':\n      icon = 'email-plus-outline';\n      break;\n    default:\n      icon = 'feather';\n      break;\n  }\n\n  const tabBarColor = theme.dark\n    ? (overlay(6, theme.colors.surface) as string)\n    : theme.colors.surface;\n\n  return (\n    <React.Fragment>\n      <Tab.Navigator\n        initialRouteName=\"Messages\"\n        backBehavior=\"initialRoute\"\n        shifting={true}\n        activeColor={theme.colors.primary}\n        inactiveColor={color(theme.colors.text)\n          .alpha(0.6)\n          .rgb()\n          .string()}\n        sceneAnimationEnabled={false}\n      >\n        <Tab.Screen\n          name=\"Messages\"\n          component={Message}\n          options={{\n            tabBarIcon: 'home-outline',\n            tabBarLabel: \"Home\",\n            tabBarColor,\n          }}\n        />\n        <Tab.Screen\n          name=\"Feed\"\n          component={Feed}\n          options={{\n            tabBarIcon: 'feature-search-outline',\n            tabBarLabel: \"Search\",\n            tabBarColor,\n          }}\n        />\n        <Tab.Screen\n          name=\"Notifications\"\n          component={Notifications}\n          options={{\n            tabBarIcon: 'information-outline',\n            tabBarLabel: \"Info\",\n            tabBarColor,\n          }}\n        />\n      </Tab.Navigator>\n      <Portal>\n        <FAB\n          visible={isFocused}\n          icon={icon}\n          style={{\n            position: 'absolute',\n            bottom: safeArea.bottom + 65,\n            right: 16,\n          }}\n          color=\"white\"\n          theme={{\n            colors: {\n              accent: theme.colors.primary,\n            },\n          }}\n          onPress={() => {}}\n        />\n      </Portal>\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}