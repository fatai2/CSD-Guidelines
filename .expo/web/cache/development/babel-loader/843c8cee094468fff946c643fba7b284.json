{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/fataiakemokwe/CSDGuidelines2/src/feed.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useTheme, Searchbar } from 'react-native-paper';\nimport { Twitt } from \"./components/twitt\";\nimport { twitts } from \"./data\";\n\nvar useDebounce = function useDebounce(value, delay) {\n  var _useState = useState(value),\n      _useState2 = _slicedToArray(_useState, 2),\n      debounceValue = _useState2[0],\n      setDebounceValue = _useState2[1];\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      setDebounceValue(value);\n    }, delay);\n    return function () {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n  return debounceValue;\n};\n\nfunction renderItem(_ref) {\n  var item = _ref.item;\n  return React.createElement(Twitt, _extends({}, item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    }\n  }));\n}\n\nfunction keyExtractor(item) {\n  return item.id.toString();\n}\n\nexport var Feed = function Feed(props) {\n  var theme = useTheme();\n  var data3 = twitts.map(function (twittProps) {\n    return _objectSpread({}, twittProps, {\n      onPress: function onPress() {\n        return props.navigation && props.navigation.push('Details', _objectSpread({}, twittProps));\n      }\n    });\n  });\n  var data = Object.values(data3).map(function (datum) {\n    return _objectSpread({}, datum, {\n      lowerCaseName: datum.name.toLowerCase()\n    });\n  }).sort(function (a, b) {\n    return a.name > b.name;\n  });\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      query = _useState4[0],\n      setQuery = _useState4[1];\n\n  var debounceQuery = useDebounce(query, 200);\n\n  var _useState5 = useState(data),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filteredData = _useState6[0],\n      setFilteredData = _useState6[1];\n\n  useEffect(function () {\n    var lowerCaseQuery = debounceQuery.toLowerCase();\n    var newData = data.filter(function (datum) {\n      return datum.lowerCaseName.includes(lowerCaseQuery);\n    }).map(function (datum) {\n      return _objectSpread({}, datum, {\n        rank: datum.lowerCaseName.indexOf(lowerCaseQuery)\n      });\n    }).sort(function (a, b) {\n      return a.rank - b.rank;\n    });\n    setFilteredData(newData);\n  }, [debounceQuery]);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    }\n  }, React.createElement(Searchbar, {\n    placeholder: \"Search Guidelines\",\n    onChangeText: setQuery,\n    value: query,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    }\n  }), React.createElement(FlatList, {\n    contentContainerStyle: {\n      backgroundColor: theme.colors.background\n    },\n    style: {\n      backgroundColor: theme.colors.background\n    },\n    data: filteredData,\n    renderItem: renderItem,\n    keyExtractor: keyExtractor,\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(View, {\n        style: {\n          height: StyleSheet.hairlineWidth\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/fataiakemokwe/CSDGuidelines2/src/feed.tsx"],"names":["React","useState","useEffect","useTheme","Searchbar","Twitt","twitts","useDebounce","value","delay","debounceValue","setDebounceValue","timer","setTimeout","clearTimeout","renderItem","item","keyExtractor","id","toString","Feed","props","theme","data3","map","twittProps","onPress","navigation","push","data","Object","values","datum","lowerCaseName","name","toLowerCase","sort","a","b","query","setQuery","debounceQuery","filteredData","setFilteredData","lowerCaseQuery","newData","filter","includes","rank","indexOf","backgroundColor","colors","background","height","StyleSheet","hairlineWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FlatList, View, StyleSheet } from 'react-native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { useTheme, Searchbar } from 'react-native-paper';\n\nimport { Twitt } from './components/twitt';\nimport { twitts } from './data';\nimport { StackNavigatorParamlist } from './types';\n\nconst useDebounce = (value: any, delay: number) => {\n  const [debounceValue, setDebounceValue] = useState(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebounceValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debounceValue;\n};\n\n\ntype TwittProps = React.ComponentProps<typeof Twitt>;\n\nfunction renderItem({ item }: { item: TwittProps }) {\n  return <Twitt {...item} />;\n}\n\nfunction keyExtractor(item: TwittProps) {\n  return item.id.toString();\n}\n\ntype Props = {\n  navigation?: StackNavigationProp<StackNavigatorParamlist>;\n};\n\nexport const Feed = (props: Props) => {\n  const theme = useTheme();\n\n  const data3 = twitts.map(twittProps => ({\n    ...twittProps,\n    onPress: () =>\n      props.navigation &&\n      props.navigation.push('Details', {\n        ...twittProps,\n      }),\n  }))\n  \n  const data = Object.values(data3)\n    .map(datum => ({\n      ...datum,\n      lowerCaseName: datum.name.toLowerCase(),\n    }))\n    .sort((a, b) => a.name > b.name);\n    \n  const [query, setQuery] = useState('');\n  const debounceQuery = useDebounce(query, 200);\n  const [filteredData, setFilteredData] = useState(data);\n\n  useEffect(() => {\n    const lowerCaseQuery = debounceQuery.toLowerCase();\n    const newData = data\n      .filter((datum) => datum.lowerCaseName.includes(lowerCaseQuery))\n      .map((datum) => ({\n        ...datum,\n        rank: datum.lowerCaseName.indexOf(lowerCaseQuery),\n      }))\n      .sort((a, b) => a.rank - b.rank);\n\n    setFilteredData(newData);\n  }, [debounceQuery]);\n  \n  return (\n    <View>\n        <Searchbar\n            placeholder=\"Search Guidelines\"\n            onChangeText={setQuery}\n            value={query}\n        />\n        <FlatList\n          contentContainerStyle={{ backgroundColor: theme.colors.background }}\n          style={{ backgroundColor: theme.colors.background }}\n          data={filteredData}\n          renderItem={renderItem}\n          keyExtractor={keyExtractor}\n          ItemSeparatorComponent={() => (\n            <View style={{ height: StyleSheet.hairlineWidth }} />\n          )}\n        />\n    </View>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}