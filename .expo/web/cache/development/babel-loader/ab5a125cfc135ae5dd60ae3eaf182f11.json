{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/fataiakemokwe/CSDGuidelines2/src/main.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Provider as PaperProvider, DefaultTheme, DarkTheme } from 'react-native-paper';\nimport { useColorScheme } from 'react-native-appearance';\nimport { RootNavigator } from \"./rootNavigator\";\nimport { PreferencesContext } from \"./context/preferencesContext\";\nexport var Main = function Main() {\n  var colorScheme = useColorScheme();\n\n  var _React$useState = React.useState(colorScheme === 'dark' ? 'dark' : 'light'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      theme = _React$useState2[0],\n      setTheme = _React$useState2[1];\n\n  function toggleTheme() {\n    setTheme(function (theme) {\n      return theme === 'light' ? 'dark' : 'light';\n    });\n  }\n\n  var preferences = React.useMemo(function () {\n    return {\n      toggleTheme: toggleTheme,\n      theme: theme\n    };\n  }, [theme]);\n  return React.createElement(PreferencesContext.Provider, {\n    value: preferences,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    }\n  }, React.createElement(PaperProvider, {\n    theme: theme === 'light' ? _objectSpread({}, DefaultTheme, {\n      colors: _objectSpread({}, DefaultTheme.colors, {\n        primary: '#1ba1f2'\n      })\n    }) : _objectSpread({}, DarkTheme, {\n      colors: _objectSpread({}, DarkTheme.colors, {\n        primary: '#1ba1f2'\n      })\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    }\n  }, React.createElement(RootNavigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/fataiakemokwe/CSDGuidelines2/src/main.tsx"],"names":["React","Provider","PaperProvider","DefaultTheme","DarkTheme","useColorScheme","RootNavigator","PreferencesContext","Main","colorScheme","useState","theme","setTheme","toggleTheme","preferences","useMemo","colors","primary"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,QAAQ,IAAIC,aADd,EAEEC,YAFF,EAGEC,SAHF,QAIO,oBAJP;AAMA,SAASC,cAAT,QAA+B,yBAA/B;AAEA,SAASC,aAAT;AACA,SAASC,kBAAT;AAEA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACxB,MAAMC,WAAW,GAAGJ,cAAc,EAAlC;;AADwB,wBAEEL,KAAK,CAACU,QAAN,CACxBD,WAAW,KAAK,MAAhB,GAAyB,MAAzB,GAAkC,OADV,CAFF;AAAA;AAAA,MAEjBE,KAFiB;AAAA,MAEVC,QAFU;;AAMxB,WAASC,WAAT,GAAuB;AACrBD,IAAAA,QAAQ,CAAC,UAAAD,KAAK;AAAA,aAAKA,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6B,OAAlC;AAAA,KAAN,CAAR;AACD;;AAED,MAAMG,WAAW,GAAGd,KAAK,CAACe,OAAN,CAClB;AAAA,WAAO;AACLF,MAAAA,WAAW,EAAXA,WADK;AAELF,MAAAA,KAAK,EAALA;AAFK,KAAP;AAAA,GADkB,EAKlB,CAACA,KAAD,CALkB,CAApB;AAQA,SACE,oBAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEG,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AACE,IAAA,KAAK,EACHH,KAAK,KAAK,OAAV,qBAESR,YAFT;AAGMa,MAAAA,MAAM,oBAAOb,YAAY,CAACa,MAApB;AAA4BC,QAAAA,OAAO,EAAE;AAArC;AAHZ,2BAMSb,SANT;AAOMY,MAAAA,MAAM,oBAAOZ,SAAS,CAACY,MAAjB;AAAyBC,QAAAA,OAAO,EAAE;AAAlC;AAPZ,MAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,KAaE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,CADF;AAmBD,CArCM","sourcesContent":["import React from 'react';\nimport {\n  Provider as PaperProvider,\n  DefaultTheme,\n  DarkTheme,\n} from 'react-native-paper';\nimport { Updates } from 'expo';\nimport { useColorScheme } from 'react-native-appearance';\n\nimport { RootNavigator } from './rootNavigator';\nimport { PreferencesContext } from './context/preferencesContext';\n\nexport const Main = () => {\n  const colorScheme = useColorScheme();\n  const [theme, setTheme] = React.useState<'light' | 'dark'>(\n    colorScheme === 'dark' ? 'dark' : 'light'\n  );\n\n  function toggleTheme() {\n    setTheme(theme => (theme === 'light' ? 'dark' : 'light'));\n  }\n\n  const preferences = React.useMemo(\n    () => ({\n      toggleTheme,\n      theme\n    }),\n    [theme]\n  );\n\n  return (\n    <PreferencesContext.Provider value={preferences}>\n      <PaperProvider\n        theme={\n          theme === 'light'\n            ? {\n                ...DefaultTheme,\n                colors: { ...DefaultTheme.colors, primary: '#1ba1f2' },\n              }\n            : {\n                ...DarkTheme,\n                colors: { ...DarkTheme.colors, primary: '#1ba1f2' },\n              }\n        }\n      >\n        <RootNavigator />\n      </PaperProvider>\n    </PreferencesContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}