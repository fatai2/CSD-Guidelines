{"ast":null,"code":"var _jsxFileName = \"/Users/fataiakemokwe/CSDGuidelines2/src/stack.tsx\";\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Appbar, Avatar, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { BottomTabs } from \"./bottomTabs\";\nimport { Details } from \"./details\";\nvar Stack = createStackNavigator();\nexport var StackNavigator = function StackNavigator() {\n  var theme = useTheme();\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"FeedList\",\n    headerMode: \"screen\",\n    screenOptions: {\n      header: function header(_ref) {\n        var scene = _ref.scene,\n            previous = _ref.previous,\n            navigation = _ref.navigation;\n        var options = scene.descriptor.options;\n        var title = options.headerTitle !== undefined ? options.headerTitle : options.title !== undefined ? options.title : scene.route.name;\n        return React.createElement(Appbar.Header, {\n          theme: {\n            colors: {\n              primary: theme.colors.surface\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          }\n        }, previous ? React.createElement(Appbar.BackAction, {\n          onPress: navigation.goBack,\n          color: theme.colors.primary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          }\n        }) : React.createElement(TouchableOpacity, {\n          style: {\n            marginLeft: 10\n          },\n          onPress: function onPress() {\n            navigation.openDrawer();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          }\n        }, React.createElement(Avatar.Image, {\n          size: 40,\n          source: {\n            uri: 'https://pbs.twimg.com/profile_images/952545910990495744/b59hSXUd_400x400.jpg'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          }\n        })), React.createElement(Appbar.Content, {\n          title: title === 'Feed' ? React.createElement(MaterialCommunityIcons, {\n            style: {\n              marginRight: 10\n            },\n            name: \"twitter\",\n            size: 40,\n            color: theme.colors.primary,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            }\n          }) : title,\n          titleStyle: {\n            fontSize: 18,\n            fontWeight: 'bold',\n            color: theme.colors.primary\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          }\n        }));\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"FeedList\",\n    component: BottomTabs,\n    options: function options(_ref2) {\n      var route = _ref2.route;\n      console.log('!@# options', {\n        route: route\n      });\n      var routeName = route.state ? route.state.routes[route.state.index].name : 'Feed';\n      return {\n        headerTitle: routeName\n      };\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Details\",\n    component: Details,\n    options: {\n      headerTitle: 'Tweet'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/fataiakemokwe/CSDGuidelines2/src/stack.tsx"],"names":["React","createStackNavigator","Appbar","Avatar","useTheme","MaterialCommunityIcons","BottomTabs","Details","Stack","StackNavigator","theme","header","scene","previous","navigation","options","descriptor","title","headerTitle","undefined","route","name","colors","primary","surface","goBack","marginLeft","openDrawer","uri","marginRight","fontSize","fontWeight","color","console","log","routeName","state","routes","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { DrawerNavigationProp } from '@react-navigation/drawer';\nimport { Appbar, Avatar, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport { BottomTabs } from './bottomTabs';\nimport { Details } from './details';\nimport { StackNavigatorParamlist } from './types';\n\nconst Stack = createStackNavigator<StackNavigatorParamlist>();\n\nexport const StackNavigator = () => {\n  const theme = useTheme();\n\n  return (\n    <Stack.Navigator\n      initialRouteName=\"FeedList\"\n      headerMode=\"screen\"\n      screenOptions={{\n        header: ({ scene, previous, navigation }) => {\n          const { options } = scene.descriptor;\n          const title =\n            options.headerTitle !== undefined\n              ? options.headerTitle\n              : options.title !== undefined\n              ? options.title\n              : scene.route.name;\n\n          return (\n            <Appbar.Header\n              theme={{ colors: { primary: theme.colors.surface } }}\n            >\n              {previous ? (\n                <Appbar.BackAction\n                  onPress={navigation.goBack}\n                  color={theme.colors.primary}\n                />\n              ) : (\n                <TouchableOpacity\n                  style={{ marginLeft: 10 }}\n                  onPress={() => {\n                    ((navigation as any) as DrawerNavigationProp<{}>).openDrawer();\n                  }}\n                >\n                  <Avatar.Image\n                    size={40}\n                    source={{\n                      uri:\n                        'https://pbs.twimg.com/profile_images/952545910990495744/b59hSXUd_400x400.jpg',\n                    }}\n                  />\n                </TouchableOpacity>\n              )}\n              <Appbar.Content\n                title={\n                  title === 'Feed' ? (\n                    <MaterialCommunityIcons\n                      style={{ marginRight: 10 }}\n                      name=\"twitter\"\n                      size={40}\n                      color={theme.colors.primary}\n                    />\n                  ) : (\n                    title\n                  )\n                }\n                titleStyle={{\n                  fontSize: 18,\n                  fontWeight: 'bold',\n                  color: theme.colors.primary,\n                }}\n              />\n            </Appbar.Header>\n          );\n        },\n      }}\n    >\n      <Stack.Screen\n        name=\"FeedList\"\n        component={BottomTabs}\n        options={({ route }) => {\n          console.log('!@# options', { route });\n          const routeName = route.state\n            ? route.state.routes[route.state.index].name\n            : 'Feed';\n          return { headerTitle: routeName };\n        }}\n      />\n      <Stack.Screen\n        name=\"Details\"\n        component={Details}\n        options={{ headerTitle: 'Tweet' }}\n      />\n    </Stack.Navigator>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}